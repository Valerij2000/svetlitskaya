//Подключение шрифта
@mixin font($font_name, $file_name, $weight, $style) {
	@font-face {
		font-family: $font_name;
		font-display: swap;
		src: url("../fonts/#{$file_name}.woff2") format("woff2"),
		url("../fonts/#{$file_name}.woff") format("woff");
		font-weight: #{$weight};
		font-style: #{$style};
	}
}

@mixin titleSkills {
	position: relative;
	counter-increment: skill;
	font-family: 'GarciaMarquez';
	font-size: rem(80);
	text-transform: uppercase;
	margin-bottom: rem(60);

	@media (max-width:$mobile) {
		font-size: rem(42);
		margin-bottom: rem(18);
	}
}

@mixin headTitle {
	display: flex;
	justify-content: space-between;
	padding-right: rem(120);
	gap: 20px;

	@media (max-width:$tablet) {
		padding-right: 0;
	}

	@media (max-width: $mobileSmall) {
		flex-direction: column;
		gap: 0;
		margin-bottom: 20px;
	}
}

@mixin descriptionHead {
	max-width: rem(320);
	font-family: 'VelaSans-Regular';
	@include adaptiveValue("font-size", 22, 14);
	@include adaptiveValue("line-height", 29, 16);
	color: $color6C;
}

//Percent
@function percent($px, $from) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}

// REM
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}

// EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}

// Currency
@mixin currency($sym) {
	&::after {
		content: "#{$sym}";
	}
}

// Grids
@mixin gridCards($type: fit, $min: 280px, $max: 1fr, $gap: 30px) {
	display: grid;
	gap: $gap;
	grid-template-columns: repeat(auto-#{$type}, minmax($min, $max));
}

// Adaptive property
@mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: $containerWidth, $widthTo: $minWidth, $keepSize: 0) {
	@if ($widthFrom==$containerWidth and $maxWidthContainer==0) {
		$widthFrom: $maxWidth;
	}

	// Брейк-поинты в EM
	$widthFromMedia: em($widthFrom);
	$widthToMedia: em($widthTo);

	// Формула плавающего значения
	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
	$yIntersection: -$widthTo * $slope+$minSize;
	$flyValue: #{rem($yIntersection)}" + "#{$slope * 100}vw;

	$propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};

	@if $widthFrom==$containerWidth or $widthFrom==$maxWidth or $keepSize==1 or $keepSize==2 {
		@media (min-width: $widthFromMedia) {
			#{$property}: rem($startSize);
		}
	}

	@media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
		#{$property}: $propertyValue;
	}

	@if $widthTo==$minWidth or $keepSize==1 or $keepSize==3 {
		@media (max-width: $widthToMedia) {
			#{$property}: rem($minSize);
		}
	}
}